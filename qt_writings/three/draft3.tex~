% Created 2023-06-01 Thu 11:40
% Intended LaTeX compiler: pdflatex
\documentclass[11pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{amssymb}
\usepackage{capt-of}
\usepackage{hyperref}
\author{Filipa  Calado}
\date{\today}
\title{}
\hypersetup{
 pdfauthor={Filipa  Calado},
 pdftitle={},
 pdfkeywords={},
 pdfsubject={},
 pdfcreator={Emacs 26.2 (Org mode 9.1.9)}, 
 pdflang={English}}
\begin{document}

\tableofcontents

\section{\emph{skinonskinonskin}}
\label{sec:org3512494}
In what follows, I read the flickering signifiers, this "flexible
chain of markers bound together by the arbitrary relations specified
by the relevant codes" ("Virtual" 77). They are productions, they are
manipulable, they are shifting.  

\emph{skinonskinonskin} is a work of "net art" created in collaboration
between Auriea Harvey and Michael Samyn, who go by the name
Entropy8Zuper!. \emph{skin} documents the inception of their love affair,
which began in an internet chat room in 1999, in the form of a digital
correspondence of web pages, or "digital love letters".
("\emph{skinonskinonskin}" \emph{Net Art Anthology}).

By today's technological standards, the net artwork is inaccessible to
modern browsers. The work consists of HTML (HyperText Markup Language)
pages animated by now obsolete web browser code (HTML and JavaScript)
and Flash software. Due to modernization, the browser languages HTML
and JavaScript use now depreciated elements like \texttt{<layers>} and
\texttt{<area>} to add animation. Additionally, since Flash technology, a
compiled software that is not "human-readable", has been discontinued,
it is very difficult to find solutions for editing and viewing Flash
elements. Besides the difficulty with authoring languages, it was
created to run on the Netscape 4 browser which offered, for the time,
a platform agnostic solution that would render on both Harvey's Mac
and Samyn's PC. \emph{skin} takes part in a body electronic work called
"Electronic Literature," which is now practically
inaccessible. Electronic Literature, which spans several subgenres,
like hypertext fiction, network literature, interactive fiction, and
generative text share a common interest in exploring aesthetics that
draw from the digitality of the medium.

In what follows, I am going to discuss this work according to three
key ideas from black feminist studies: [force], foreclosure, and
fugitivity.

\subsection{haptics -> movement engages source code's "shifts" (torque)}
\label{sec:orgc3cb2fe}
The hypertext work plays with haptic engagement (the hand on the
mouse) in ways that point to \emph{shifts} that occur in the underlying
program code. 

-> These shifts can be what? What is a "shift" -- a piece of code that
executes?  

-> What is the significance of these shifts? That they are rooted in
constraints, conditional statements, static images, to engage motion?

The pages by Samyn, in particular, deploy animation techniques that
engage the user's physical movement. One page, "air.html," challenges
the user's tactile ability, requiring precise mouse manipulations in
order to "move" elements across the page. On this page, the user
controls two small bodies in horizontal, flying position, as they
float over a field of a field of rotating lines, which evoke a
rolling, cyber-landcape. The animations operate like magnets, always
moving toward the mouse, but the strength of their attraction depends
on the mouse's speed. By slowing down the speed, the individual bodies
can touch, but they can never cross each other. Even with the most
precise movements, Samyn's body remains on the left, while Harvey's is
on the right. [SEE GIF] The illusion of freedom in floating,
therefore, has constraints. 

[include gif of air.html]

The animation is defined in the JavaScript, in the page's source code.
Observe the if/else statement for the JavaScript function,
\texttt{flyMouse()}.

\begin{SOURCE}
if ( mouseX < halfW )
	\{
	var mFactor = 0.1;
	var aFactor = 0.01;
	\}
else
	\{
	var mFactor = 0.01;
	var aFactor = 0.1;
	\};
\ldots{}
dMove('flyingmL','document.',mLeft + thisXDiff*mFactor,mTop + thisYDiff*mFactor);
\ldots{}
dMove('flyingaL','document.',aLeft + thisXDiff*aFactor,aTop + thisYDiff*aFactor);
moveGround();
\end{SOURCE}

Though the full workings of the source code remain fuzzy (at least to
me), it is clear that the basics of the animation element relies on an
if/else statement. Here, the movement of the bodies is conditional on
their distance between the mouse and the original positioning of the
bodies on either side of the screen. Depending on this distance, the
magnetic force for each of the bodies is multiplied against a factor
of .1 or .01. This results in a stronger movement from Samyn's body
when the mouse is on the left side of the screen (Samyn's original
position), and a stronger movement from Harvey's body when the mouse
is on the right half of the screen. The binary nature of this
conditional statement--it can be true or it can be false, and will
execute the associated code--accords with an animation that is, at its
core, about dual movement. Here, the movement by the hand and the
oppsitional constraints which the user comes up against, engage the
transformations that take place in the code, "under the hood" of the
work, so to speak.

Throughout this work, the user engages with HTML and JavaScript code
via haptics on the browser. The source code endows digital "objects"
with properties and methods so that they can become manipulable at the
level of surface. These constructs, which are defined under the hood
of the browser, enable sensual experiences for the user. 

One example occurs on "obsessed.html," which contains a view of a
concentric circles, in green, that move against the cursor in a
circular motion. The motion of the circles, which are rooted in the
ummoving center circle, and whose outer layers increase in mobility,
recall a spring mechanism, flexible yet taut. If "air.html" play with
magnetic forces, this plays with the opposite, with opposing
foce. Moving the mouse across the screen pushes the circles away. If
one, however, moves the mouse to the center of the circle, they settle
back into a neutral position.

The center circle, when clicked, leads to a new page, "control.html."
While the source code for most pages include a title, author, and
date, this page only contains a title, "you:controlMe." It consists of
a monochrome green image of Harvey, whose head rolls from side to side
in the direction of the user's cursor. The effect, which is reinforced
by the cursor appearing as a pointing hand, as it does when something
becomes "clickable," is that the user manually turns Havery's head
from one side to the other by pressure of the
cursor-as-hand. Additionally, when the user moves Harvey's head from
side to side, they not only see more or less of her face, but also
peices of "alt-text" with words like "go" "believe" "ocean" and
"mind". The [SEE GIF].

[INSERT GIF]

There are two interesting things here. The first is the way the
animation engages directly the sensuality of the human user. Not only
does the cursor implicate hand movement, in that the user \emph{moves}
Harvey's face by passing the mouse over it, but the animation itself
lends an aura of super-reality. Rather than represent a smooth
movement from side to side, Harvey's head takes little jumps from one
position to another. A look into the source code reveals that the
animation consists of 23 images that loop according to the position of
the user's mouse. The effect is a slight lag, a series of fleeting
pauses that intensify Harvey's direct gaze into the camera.

\subsection{foreclosure - > language \& code}
\label{sec:org4973a4d}
Although the user has full access to Harvey's image, they have only
partial access to the alt-text that appears when they pan over certain
parts of the animation." Alt-text is one of several attributes tied to
each of the 23 images used to animate the movement of Harvey's head,
including coordinates for the mouse to activate the relevant image and
conditional statements that define visibility. The code for a single
image of the 23, for example, consists of the following: \textasciitilde{}<AREA
SHAPE=RECT ALT="i" HREF="\#" COORDS="0,0,8,142"
onMouseOver="strokeimage.src=stroke1.src ; window.status='i' ; return
true">\textasciitilde{}. Alt-text," short for "alternative text," triggers the
displays descriptive text meant to stand in place of the image, for
accessibility reasons and in the case that the image fails to
load. Without knowledge of the precise location of each alt-text
coordinate, accessing all of the alt-text embedded within the images
requires a peak at the source code, which lists the alt-text for each
of the 23 images one by one:
\begin{SOURCE}
<AREA SHAPE=RECT ALT="i" ..>
<AREA SHAPE=RECT ALT="believe" \ldots{}>
<AREA SHAPE=RECT ALT="in" \ldots{}>
<AREA SHAPE=RECT ALT="it" \ldots{}>
<AREA SHAPE=RECT ALT="you" \ldots{}>
<AREA SHAPE=RECT ALT="created" \ldots{}>
<AREA SHAPE=RECT ALT="it" \ldots{}>
<AREA SHAPE=RECT ALT="in" \ldots{}>
<AREA SHAPE=RECT ALT="my" \ldots{}>
<AREA SHAPE=RECT ALT="mind" \ldots{}>
<AREA SHAPE=RECT ALT="my" \ldots{}>
<AREA SHAPE=RECT ALT="mind" \ldots{}>
<AREA SHAPE=RECT ALT="cannot" \ldots{}>
<AREA SHAPE=RECT ALT="let" \ldots{}>
<AREA SHAPE=RECT ALT="it" \ldots{}>
<AREA SHAPE=RECT ALT="go" \ldots{}>
<AREA SHAPE=RECT ALT="the" \ldots{}>
<AREA SHAPE=RECT ALT="ocean" \ldots{}>
<AREA SHAPE=RECT ALT="the" \ldots{}>
<AREA SHAPE=RECT ALT="waves" \ldots{}>
<AREA SHAPE=RECT ALT="its" \ldots{}>>
<AREA SHAPE=RECT ALT="a" \ldots{}>
<AREA SHAPE=RECT ALT="vision" \ldots{}>
\end{SOURCE}
While the user may experience a number of these phrases as they pan
over the image, here the ordering creates a sense of coherence. When
viewed in this way, from the top-down, the words string together into
intelligible thoughts like "i believe in it," and "my mind cannot let
it go." What appears on the surface of the work, then, is only a
particle of the full description occuring below. 

Below the overt narrative of surface effects, lies another narrative
within the source code. Here, within the HTML and JavaScript that
define the content, presentation, and animations on the page, lie
secret messages meant for human eyes. While most of the work is visual
and haptic in nature, these hidden messages combine natural language
with code to make verbal exhortations of love. For example, on the
first page, "breath.html," an array of romantic protestations are
assigned to the value, "whispers." These "whispers," which include
phrases like "i will love you forever," "i want to breath you," among
others included below, do not manifest directly on the browser, which
only shows a moving image of a bared chest accompanied by breathing
sounds. Rather, the messages are hidden within the source code,
waiting only for the curious and experienced user to come and find
them.
\begin{SOURCE}
whispers = new Array();
whispers[0] = "breath me";
whispers[1] = "i will love you forever";
whispers[2] = "skin";
whispers[3] = "skin on skin";
whispers[4] = "skin on skin on skin";
whispers[5] = "implode";
whispers[6] = "soft";
whispers[7] = "slow";
whispers[8] = "can you feel me?";
whispers[9] = "touch me";
whispers[10] = "one more cigarette";
whispers[11] = "i am so open";
whispers[12] = "i want to feel you inside of me";
whispers[13] = "smoke";
whispers[14] = "i want to breathe you";
whispers[15] = "we are smoke";
whispers[16] = "yesss";
whispers[17] = "deeper";
whispers[18] = "i am disappearing";
whispers[19] = "warm";
\end{SOURCE}

Musser describes foreclosure as an overflow of surface effects that
preclude understanding beyond them. Foreclosure is strategy of
resistance against attempts at incorporation. Something is always
withheld. Similarly, I want to suggest that computer code creates a
level of foreclosure by making elements always partially
inaccessible. The surface effects of the screen engage elements within
the code, sometimes in code from other pages, which are inaccessible
to the general user, to surface additional layers of foreclosure. For
example, the page, "close.html," takes a series of filenames from
"smoke.html" to overlay the image of the chest from "breath.html" (SEE
IMAGE). Rather than take the content of the files directly, this new
page takes the \emph{filenames} of the words, such as "ccy\(_{\text{01}}\)\(_{\text{Over.jpg}}\)."
The move creates a double foreclosure: first, in the original image,
which requires precise activation by the user's mouse; and second, in
the filename, which gives no indication of the image's content and
cannot be found (as far as I can tell) for further examination on the
server. In other words, the filenames on the chest stand for images
which the user cannot see directly. This effect surfaces a
displacement inherent in all significatory systems but particularly in
machine language systems, which rely on levels of abstraction in its
software stack.

[IMAGE OF CLOSE.HTML]

\subsection{flash foreclosure}
\label{sec:org92e51ec}
In "words.html,"
view-source:\url{http://entropy8zuper.org/skinonskinonskin/rhizome/words.html}
By Samyn on valentines day, 1999.

Samyn animates a beating heart, overlaid with words and phrases that
move in various arcs from its center. [SEE IMAGE/GIF]

The code for this page does various things: first, it defines the list
of strings, or words/phrases, which will arc over and around the
heart. Then, it includes a series of JavaScript functions that selects
words, calculates their trajectory and timing, and resets their
position to restart the loop.
\begin{SOURCE}
unction startMove()
\{
floatWords(0,Math.round(words.length/4));
setTimeout("floatWords(Math.round(words.length/4),Math.round(words.length/2));",5000);
setTimeout("floatWords(Math.round(words.length/2),Math.round(words.length/4*3));",10000);
setTimeout("floatWords(Math.round(words.length/4*3),Math.round(words.length));",15000);
\};

function floatWords(startNumber,endNumber)
\{
for ( i = startNumber ; i < endNumber ; i++ ) \{ floatWord(i); \};
\};

function rePos(thisNumber)
\{
dMove('wordL'+thisNumber,'document.',halfW-rand(50),halfH-rand(50));
floatWord(thisNumber);
\};

function floatWord(thisNumber)
\{
var randTime = (rand(15) + 5 )*1000;
var thisRand = rand(4);
if ( thisRand \texttt{= 1 ) \{ dMoveStraight('wordL'+thisNumber,'document.',-100-rand(100),rand(stageH),randTime,'wordVal'+thisNumber,'rePos(' + thisNumber + ');',''); \}
else if ( thisRand =} 2 ) \{ dMoveStraight('wordL'+thisNumber,'document.',rand(stageW),-20-rand(100),randTime,'wordVal'+thisNumber,'',''); \}
else if ( thisRand \texttt{= 3 ) \{ dMoveStraight('wordL'+thisNumber,'document.',stageW + rand(100),rand(stageH),randTime,'wordVal'+thisNumber,'rePos(' + thisNumber + ');',''); \}
else if ( thisRand =} 4 ) \{ dMoveStraight('wordL'+thisNumber,'document.',rand(stageW),stageH + rand(100),randTime,'wordVal'+thisNumber,'',''); \}
if ( rand(4) == 1 ) \{ dShow('wordL'+thisNumber,'document.','visible'); \};
\}; "words.html"
\end{SOURCE}
I'm going to give a brief overview of each function. The first
function, \texttt{startMove()}, sets a series of timers that initiate and
perpetuate the animation. The second function, \texttt{floadWords()}, loops
through the list of words and phrases and passes individual selections
from this list to the next function, \texttt{floatWord()}, which sets the
trajectory and timing for their movement. Within this function, a call
to \texttt{rePos()} repositions the word in a new location, to begin the
cycle anew. 

On line 98: "\$we are disembodied arms and mouths "

Let us look more closely into the flash animation, which contains its
own foreclosures. Flash is a standalone application and web browser
plugin for authoring and viewing animations. It began development in
the mid-1990s and gained popularity for its ability to deliver
relatively advanced graphics (such as video and sound, primarily) at a
time when media-rich content traveled slowly over the web. However,
with the development of newer, more efficient and secure animation
technologies in the last 10 years, Flash began to fall out of
popularity and was officially discontinued on December
31st, 2020. Although the general internet user will not feel the
difference, since newer technologies like HTML5 and Javascript have
stepped up to deliver what Flash had initially offered in much more
flexible, portable, and efficient ways, this development has cast a
generation of internet games, net art, and electronic literature into
obsolesence. Today, the only way to view Flash content is through
plugins, emulators (like the one for \emph{skin}), or "decompiler" programs
(discussed below).

The elements of foreclosure emerge most starkly with non-plain-text
content like Flash files. This is due to Flash code, unlike
plain-text, being a binary code format. If opened in a text editor,
for example, Flash files (which usually have an ".swf" or ".fla"
extention) would appear to be made of incomprehensible characters and
symbols, some of which the text editor may recognize, and others which
it would display as a question mark. For example, here is a plain text
rendition of the file that contains the sound animation of of the
heatbeat on "breath.html":

[IMAGE OF TEXT EDITOR OF OF HEARTBEAT.SWF]

Because binary code is unreadable to the human eye, it requires
specific authoring software to work with it. A "Flash decompiler"
program, for example, offers an interface for seeing the components of
a Flash file without having to deal with the machine code layer. The
file is separated into components. The above file, for example,
contains components like "sounds," "frames," and "scripts." So the
file becomes abstracted in a way that humans can make sense of
it. Below is an image of the flash decompiler interface, with all of
the components of the image on the left sidebar. Interestingly, when
examining the frames, one can distort the sound of the heartbeat.

[IMAGE OF FLASH DECOMPILER INTERFACE ON "HEARTBEAT.SWF"]

What I want to emphasize here is that this code cannot be edited
directly. 

How does an emulator work? Does emulation add another layer of
sensuality to the peice?]

The final aspect of this text I want to discuss is reduction. The love
affair is reduced to digital objects which can pass over the
wires. The couple make this point in a chat between the two of them,
discussing how constraints constitute the relationship:
\begin{quote}
womanonfire: the sound is a bit distorted with these things
zuper: (private) yes
womanonfire: if no one was around me here
zuper: (private) the image is distorted too
womanonfire: i would speak to you
zuper: (private) but that's ok
womanonfire: yes!
womanonfire: these are all part of our relationship
womanonfire: these limitations
womanonfire: we must
zuper: (private) 26 letters, no sound, no image
womanonfire: learn new ways
zuper: (private) make DHTMLove to me\ldots{} \url{http://entropy8zuper.org/}
\end{quote}

The way that digital objects play with reductions of complexity here
evokes what Snorton says about the reduction of black bodies to
flesh. Such a reduction enables flesh to harness the chaos of
significatory possibility. I want to argue that digital objects, as
distillations of real world referents, are imbued with expressive
potential.

In what follows, I'm going to examine the ways that Harvey's (black)
body has been reduced with this effect. The question of Harvey's race
emerges in a chat between Harvey and Samyn, though it is buffeted by
questions of physicality more generally. To get a sense of the
conversation, I quote the chat at some length: 
\begin{quote}
womanonfire: i wonder wht your voice is like
zuper: my voice?
zuper: let's try
zuper: it's weird to talk in a silent office at night
womanonfire: yes
womanonfire: i can just barely make you out
womanonfire: how fitting
womanonfire: it sounds so far away but you feel so close
zuper: yes
zuper: i am close
zuper: i don't understand myself
womanonfire: i will write you a very long letter tonight
zuper: I'm falling in love with a 160x120 pixel video\ldots{}
zuper: Yes please write me a long letter
womanonfire: it is dificult for me here right now
zuper: why is it difficult?
womanonfire: i was just about to write one about this
womanonfire: because i love you
zuper: \ldots{}
womanonfire: seems so 
womanonfire: strange
womanonfire: maybe it is lust
womanonfire: i cant tell anymore
zuper: pixellust?
womanonfire: right
zuper: I my case only ASCIIlust\ldots{}
womanonfire: but i want to make a home for us
womanonfire: in the network
zuper: Have you read Sterlings 'Holy Fire'?
womanonfire: no
zuper: They have places called 'Memory Palaces' on the net
zuper: where they keep all their souvenirs and where people can meet
womanonfire: i just heard you that time
womanonfire: !
zuper: in dutch!
womanonfire: yes!
zuper: (private) I realised today that I have never been in love with somebody who doesn't speak Dutch before.
womanonfire -> zuper: i have never been in love with someone in another country before
zuper: (private) I have never been in love with someone with green dreadlocks before
zuper: (private) let alone black skin
womanonfire -> zuper: yes i hope you wiwll like my skin
zuper: (private) I already do.
womanonfire -> zuper: :) \url{http://entropy8zuper.org/} 
\end{quote}
The question of race becomes one in a list of other physical
attributes, is equated to speaking a foreign language, is buffeted by
concerns about connectivity and finally, transported and made possible
by network technologies. 

The reduction of her body to certain attributes, her black skin and
green hair, for example, endows her physical being with expressive
possiblity. The dark-skinned green-haired floating woman. Here, the
less detail an element has, the more meaning the viewer can impose to
the elements.

We see this in the black hand which touches our screen. It is a simple
shape, but it is expressive.

l materiality hearkening back to black fem theory 
Sensuality in their shifts and their surface effects, particularly in
the way they foreclose \emph{forensic} materiality, refuse depth. Here we
draw from black feminist theorizing. 
\end{document}
